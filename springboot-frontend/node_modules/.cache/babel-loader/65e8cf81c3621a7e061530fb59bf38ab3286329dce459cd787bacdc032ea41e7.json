{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajen\\\\Downloads\\\\springboot-backend\\\\springboot-frontend\\\\src\\\\user\\\\UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [product, setProduct] = useState({});\n  const [image, setImage] = useState();\n  const [updateProduct, setUpdatedProduct] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    brand: \"\",\n    price: \"\",\n    category: \"\",\n    quantity: \"\",\n    releaseDate: \"\",\n    available: false\n  });\n  //first fetchById\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/product/${id}`);\n        setProduct(response.data);\n        const responseImage = await axios.get(\n        //fetch the image by id\n        `http://localhost:8080/product/${id}/image`, {\n          responseType: \"blob\"\n        });\n        //convert url to a file\n        const imageFile = await convertUrlToFile(responseImage.data, response.data.imageName);\n        setImage(imageFile);\n        setUpdatedProduct(response.data);\n      } catch (error) {\n        console.log(\"Error Fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n  useEffect(() => {\n    console.log(\"image Updated\", image);\n  }, [image]);\n  const convertUrlToFile = async (blobData, fileName) => {\n    const file = new File([blobData, fileName], {\n      type: blobData.type\n    });\n    return file;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"images\", image);\n    console.log(\"product\", updateProduct);\n    const updatedProduct = new FormData();\n    updatedProduct.append(\"imageFile\", image);\n    updatedProduct.append(\"product\", new Blob([JSON.stringify(updatedProduct)], {\n      type: \"application/json\"\n    }));\n    console.log(\"formData\", updatedProduct);\n    axios.put(`http://localhost/product/${id}`, updatedProduct, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      console.log(\"Product updated successfully\", updatedProduct);\n      alert(\"Product updated successfully!\");\n    }).catch(error => {\n      console.error(\"Error updating product:\", error);\n      console.log(\"product unsuccessfull update\", updatedProduct);\n      alert(\"Failed to update product. Please try again.\");\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedProduct({\n      ...updateProduct,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    setImage(e.target.file[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProduct, \"t4WBsyiUarFgd6Jhn6ywioDIbWY=\", false, function () {\n  return [useParams];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","UpdateProduct","_s","id","product","setProduct","image","setImage","updateProduct","setUpdatedProduct","name","description","brand","price","category","quantity","releaseDate","available","fetchProduct","response","get","data","responseImage","responseType","imageFile","convertUrlToFile","imageName","error","console","log","blobData","fileName","file","File","type","handleSubmit","e","preventDefault","updatedProduct","FormData","append","Blob","JSON","stringify","put","headers","then","alert","catch","handleChange","value","target","handleImageChange","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rajen/Downloads/springboot-backend/springboot-frontend/src/user/UpdateProduct.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst UpdateProduct=()=>{\r\n  const{id}=useParams();\r\n  const[product,setProduct]=useState({});\r\n  const[image,setImage]=useState();\r\n  const[updateProduct,setUpdatedProduct]=useState({\r\n     id :null,\r\n     name :\"\",\r\n     description :\"\",\r\n     brand:\"\",\r\n     price:\"\",\r\n     category:\"\",\r\n     quantity:\"\",\r\n     releaseDate:\"\",\r\n     available:false\r\n  })\r\n    //first fetchById\r\n\r\n    useEffect(()=>{\r\n   const fetchProduct =async()=>{\r\n        try{\r\n        const response = await axios.get(\r\n            `http://localhost:8080/product/${id}`\r\n        );\r\n        setProduct(response.data);\r\n\r\n        const responseImage = await axios.get(              //fetch the image by id\r\n            `http://localhost:8080/product/${id}/image`,\r\n            {responseType:\"blob\"}\r\n        );\r\n          //convert url to a file\r\n          const imageFile=await convertUrlToFile(responseImage.data,response.data.imageName)\r\n          setImage(imageFile);\r\n          setUpdatedProduct(response.data);\r\n        }\r\n        catch(error){\r\n            console.log(\"Error Fetching product:\",error);\r\n        }\r\n   };\r\n      fetchProduct();\r\n    },[id])\r\n\r\n\r\n      useEffect(()=>{\r\n        console.log(\"image Updated\",image)\r\n      },[image]);\r\n\r\n\r\n      const convertUrlToFile = async(blobData,fileName)=>{\r\n        const file=new File([blobData,fileName],{type:blobData.type});\r\n        return file;\r\n      }\r\n\r\n\r\n      const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n       console.log(\"images\",image);\r\n       console.log(\"product\",updateProduct)\r\n       const updatedProduct = new FormData();\r\n        updatedProduct.append(\"imageFile\",image);\r\n        updatedProduct.append(\r\n            \"product\",\r\n            new Blob([JSON.stringify(updatedProduct)],{type:\"application/json\"})\r\n        );\r\n        console.log(\"formData\",updatedProduct)\r\n        axios\r\n        .put(`http://localhost/product/${id}`,updatedProduct,{\r\n         headers:{\r\n            \"Content-Type\":\"multipart/form-data\",\r\n         },\r\n        })\r\n        .then((response)=>{\r\n            console.log(\"Product updated successfully\",updatedProduct);\r\n            alert(\"Product updated successfully!\")\r\n        })\r\n        .catch((error)=>{\r\n            console.error(\"Error updating product:\", error);\r\n            console.log(\"product unsuccessfull update\",updatedProduct)\r\n            alert(\"Failed to update product. Please try again.\");    \r\n        });\r\n      };\r\n\r\n      const handleChange=(e)=>{\r\n        const{name,value}=e.target;\r\n        setUpdatedProduct({\r\n            ...updateProduct,\r\n              [name]:value,\r\n        });\r\n      };\r\n\r\n      const handleImageChange=(e)=>{\r\n        setImage(e.target.file[0]);\r\n      };\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\nexport default UpdateProduct"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}