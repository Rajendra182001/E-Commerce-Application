{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajen\\\\Downloads\\\\springboot-backend\\\\springboot-frontend\\\\src\\\\cart\\\\Context.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext({\n  data: [],\n  isError: \"\",\n  cart: [],\n  addToCart: product => {},\n  removeFromCart: productId => {},\n  refreshData: () => {},\n  updateStockQuantity: (productId, newQuantity) => {}\n});\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isError, setIsError] = useState(\"\");\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')) || []);\n  const addToCart = product => {\n    const existingProductIndex = cart.findIndex(item => item.id === product.id);\n    if (existingProductIndex !== -1) {\n      const updatedCart = cart.map((item, index) => index === existingProductIndex ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n      setCart(updatedCart);\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n    } else {\n      const updatedCart = [...cart, {\n        ...product,\n        quantity: 1\n      }];\n      setCart(updatedCart);\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n    }\n  };\n  const removeFromCart = productId => {\n    console.log(\"productID\", productId);\n    const updatedCart = cart.filter(item => item.id !== productId);\n    setCart(updatedCart);\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n    console.log(\"CART\", cart);\n  };\n  const refreshData = async () => {\n    try {\n      const response = await axios.get(\"/product\");\n      setData(response.data);\n    } catch (error) {\n      setIsError(error.message);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  useEffect(() => {\n    refreshData();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      data,\n      isError,\n      cart,\n      addToCart,\n      removeFromCart,\n      refreshData,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"tDJUC+H9uKWeYVXXrfaiL3FNAJg=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["axios","useState","useEffect","createContext","jsxDEV","_jsxDEV","AppContext","data","isError","cart","addToCart","product","removeFromCart","productId","refreshData","updateStockQuantity","newQuantity","AppProvider","children","_s","setData","setIsError","setCart","JSON","parse","localStorage","getItem","existingProductIndex","findIndex","item","id","updatedCart","map","index","quantity","setItem","stringify","console","log","filter","response","get","error","message","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rajen/Downloads/springboot-backend/springboot-frontend/src/cart/Context.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect, createContext } from \"react\";\r\n\r\nconst AppContext = createContext({\r\n  data: [],\r\n  isError: \"\",\r\n  cart: [],\r\n  addToCart: (product) => {},\r\n  removeFromCart: (productId) => {},\r\n  refreshData:() =>{},\r\n  updateStockQuantity: (productId, newQuantity) =>{}\r\n  \r\n});\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [data, setData] = useState([]);\r\n  const [isError, setIsError] = useState(\"\");\r\n  const [cart, setCart] = useState(JSON.parse(localStorage.getItem('cart')) || []);\r\n\r\n\r\n  const addToCart = (product) => {\r\n    const existingProductIndex = cart.findIndex((item) => item.id === product.id);\r\n    if (existingProductIndex !== -1) {\r\n      const updatedCart = cart.map((item, index) =>\r\n        index === existingProductIndex\r\n          ? { ...item, quantity: item.quantity + 1 }\r\n          : item\r\n      );\r\n      setCart(updatedCart);\r\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    } else {\r\n      const updatedCart = [...cart, { ...product, quantity: 1 }];\r\n      setCart(updatedCart);\r\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    console.log(\"productID\",productId)\r\n    const updatedCart = cart.filter((item) => item.id !== productId);\r\n    setCart(updatedCart);\r\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n    console.log(\"CART\",cart)\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    try {\r\n      const response = await axios.get(\"/product\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      setIsError(error.message);\r\n    }\r\n  };\r\n\r\n  const clearCart =() =>{\r\n    setCart([]);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n  \r\n  return (\r\n    <AppContext.Provider value={{ data, isError, cart, addToCart, removeFromCart,refreshData, clearCart  }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContext;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,gBAAGH,aAAa,CAAC;EAC/BI,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAGC,OAAO,IAAK,CAAC,CAAC;EAC1BC,cAAc,EAAGC,SAAS,IAAK,CAAC,CAAC;EACjCC,WAAW,EAACA,CAAA,KAAK,CAAC,CAAC;EACnBC,mBAAmB,EAAEA,CAACF,SAAS,EAAEG,WAAW,KAAI,CAAC;AAEnD,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACZ,IAAI,EAAEa,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEa,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEa,OAAO,CAAC,GAAGrB,QAAQ,CAACsB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;EAGhF,MAAMhB,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMgB,oBAAoB,GAAGlB,IAAI,CAACmB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKnB,OAAO,CAACmB,EAAE,CAAC;IAC7E,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;MAC/B,MAAMI,WAAW,GAAGtB,IAAI,CAACuB,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,KACvCA,KAAK,KAAKN,oBAAoB,GAC1B;QAAE,GAAGE,IAAI;QAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;MAAE,CAAC,GACxCL,IACN,CAAC;MACDP,OAAO,CAACS,WAAW,CAAC;MACpBN,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACL,WAAW,CAAC,CAAC;IAC3D,CAAC,MAAM;MACL,MAAMA,WAAW,GAAG,CAAC,GAAGtB,IAAI,EAAE;QAAE,GAAGE,OAAO;QAAEuB,QAAQ,EAAE;MAAE,CAAC,CAAC;MAC1DZ,OAAO,CAACS,WAAW,CAAC;MACpBN,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACL,WAAW,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMnB,cAAc,GAAIC,SAAS,IAAK;IACpCwB,OAAO,CAACC,GAAG,CAAC,WAAW,EAACzB,SAAS,CAAC;IAClC,MAAMkB,WAAW,GAAGtB,IAAI,CAAC8B,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKjB,SAAS,CAAC;IAChES,OAAO,CAACS,WAAW,CAAC;IACpBN,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACL,WAAW,CAAC,CAAC;IACzDM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAC7B,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM0B,QAAQ,GAAG,MAAMxC,KAAK,CAACyC,GAAG,CAAC,UAAU,CAAC;MAC5CrB,OAAO,CAACoB,QAAQ,CAACjC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACdrB,UAAU,CAACqB,KAAK,CAACC,OAAO,CAAC;IAC3B;EACF,CAAC;EAED,MAAMC,SAAS,GAAEA,CAAA,KAAK;IACpBtB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACduB,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAAC3B,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA,CAACC,UAAU,CAACuC,QAAQ;IAACC,KAAK,EAAE;MAAEvC,IAAI;MAAEC,OAAO;MAAEC,IAAI;MAAEC,SAAS;MAAEE,cAAc;MAACE,WAAW;MAAE8B;IAAW,CAAE;IAAA1B,QAAA,EACpGA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAC/B,EAAA,CAzDWF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA2DxB,eAAeX,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}